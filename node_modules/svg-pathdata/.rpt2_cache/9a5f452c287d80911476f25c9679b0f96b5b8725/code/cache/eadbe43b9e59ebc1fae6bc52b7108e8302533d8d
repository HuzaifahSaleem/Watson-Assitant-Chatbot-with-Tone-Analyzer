{"code":"import { SVGPathData } from \"./SVGPathData\";\r\nexport function rotate(_a, rad) {\r\n    var x = _a[0], y = _a[1];\r\n    return [\r\n        x * Math.cos(rad) - y * Math.sin(rad),\r\n        x * Math.sin(rad) + y * Math.cos(rad),\r\n    ];\r\n}\r\nvar DEBUG_CHECK_NUMBERS = true;\r\nexport function assertNumbers() {\r\n    var numbers = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        numbers[_i] = arguments[_i];\r\n    }\r\n    if (DEBUG_CHECK_NUMBERS) {\r\n        for (var i = 0; i < numbers.length; i++) {\r\n            if (\"number\" !== typeof numbers[i]) {\r\n                throw new Error(\"assertNumbers arguments[\" + i + \"] is not a number. \" + typeof numbers[i] + \" == typeof \" + numbers[i]);\r\n            }\r\n        }\r\n    }\r\n    return true;\r\n}\r\nvar PI = Math.PI;\r\n/**\r\n * https://www.w3.org/TR/SVG/implnote.html#ArcImplementationNotes\r\n * Fixes rX and rY.\r\n * Ensures lArcFlag and sweepFlag are 0 or 1\r\n * Adds center coordinates: command.cX, command.cY (relative or absolute, depending on command.relative)\r\n * Adds start and end arc parameters (in degrees): command.phi1, command.phi2; phi1 < phi2 iff. c.sweepFlag == true\r\n */\r\nexport function annotateArcCommand(c, x1, y1) {\r\n    c.lArcFlag = (0 === c.lArcFlag) ? 0 : 1;\r\n    c.sweepFlag = (0 === c.sweepFlag) ? 0 : 1;\r\n    // tslint:disable-next-line\r\n    var rX = c.rX, rY = c.rY, x = c.x, y = c.y;\r\n    rX = Math.abs(c.rX);\r\n    rY = Math.abs(c.rY);\r\n    var _a = rotate([(x1 - x) / 2, (y1 - y) / 2], -c.xRot / 180 * PI), x1_ = _a[0], y1_ = _a[1];\r\n    var testValue = Math.pow(x1_, 2) / Math.pow(rX, 2) + Math.pow(y1_, 2) / Math.pow(rY, 2);\r\n    if (1 < testValue) {\r\n        rX *= Math.sqrt(testValue);\r\n        rY *= Math.sqrt(testValue);\r\n    }\r\n    c.rX = rX;\r\n    c.rY = rY;\r\n    var c_ScaleTemp = (Math.pow(rX, 2) * Math.pow(y1_, 2) + Math.pow(rY, 2) * Math.pow(x1_, 2));\r\n    var c_Scale = (c.lArcFlag !== c.sweepFlag ? 1 : -1) *\r\n        Math.sqrt(Math.max(0, (Math.pow(rX, 2) * Math.pow(rY, 2) - c_ScaleTemp) / c_ScaleTemp));\r\n    var cx_ = rX * y1_ / rY * c_Scale;\r\n    var cy_ = -rY * x1_ / rX * c_Scale;\r\n    var cRot = rotate([cx_, cy_], c.xRot / 180 * PI);\r\n    c.cX = cRot[0] + (x1 + x) / 2;\r\n    c.cY = cRot[1] + (y1 + y) / 2;\r\n    c.phi1 = Math.atan2((y1_ - cy_) / rY, (x1_ - cx_) / rX);\r\n    c.phi2 = Math.atan2((-y1_ - cy_) / rY, (-x1_ - cx_) / rX);\r\n    if (0 === c.sweepFlag && c.phi2 > c.phi1) {\r\n        c.phi2 -= 2 * PI;\r\n    }\r\n    if (1 === c.sweepFlag && c.phi2 < c.phi1) {\r\n        c.phi2 += 2 * PI;\r\n    }\r\n    c.phi1 *= 180 / PI;\r\n    c.phi2 *= 180 / PI;\r\n}\r\n/**\r\n * Solves a quadratic system of equations of the form\r\n *      a * x + b * y = c\r\n *      x² + y² = 1\r\n * This can be understood as the intersection of the unit circle with a line.\r\n *      => y = (c - a x) / b\r\n *      => x² + (c - a x)² / b² = 1\r\n *      => x² b² + c² - 2 c a x + a² x² = b²\r\n *      => (a² + b²) x² - 2 a c x + (c² - b²) = 0\r\n */\r\nexport function intersectionUnitCircleLine(a, b, c) {\r\n    assertNumbers(a, b, c);\r\n    // cf. pqFormula\r\n    var termSqr = a * a + b * b - c * c;\r\n    if (0 > termSqr) {\r\n        return [];\r\n    }\r\n    else if (0 === termSqr) {\r\n        return [\r\n            [\r\n                (a * c) / (a * a + b * b),\r\n                (b * c) / (a * a + b * b)\r\n            ]\r\n        ];\r\n    }\r\n    var term = Math.sqrt(termSqr);\r\n    return [\r\n        [\r\n            (a * c + b * term) / (a * a + b * b),\r\n            (b * c - a * term) / (a * a + b * b)\r\n        ],\r\n        [\r\n            (a * c - b * term) / (a * a + b * b),\r\n            (b * c + a * term) / (a * a + b * b)\r\n        ]\r\n    ];\r\n}\r\nexport var DEG = Math.PI / 180;\r\nexport function lerp(a, b, t) {\r\n    return (1 - t) * a + t * b;\r\n}\r\nexport function arcAt(c, x1, x2, phiDeg) {\r\n    return c + Math.cos(phiDeg / 180 * PI) * x1 + Math.sin(phiDeg / 180 * PI) * x2;\r\n}\r\nexport function bezierRoot(x0, x1, x2, x3) {\r\n    var EPS = 1e-6;\r\n    var x01 = x1 - x0;\r\n    var x12 = x2 - x1;\r\n    var x23 = x3 - x2;\r\n    var a = 3 * x01 + 3 * x23 - 6 * x12;\r\n    var b = (x12 - x01) * 6;\r\n    var c = 3 * x01;\r\n    // solve a * t² + b * t + c = 0\r\n    if (Math.abs(a) < EPS) {\r\n        // equivalent to b * t + c =>\r\n        return [-c / b];\r\n    }\r\n    return pqFormula(b / a, c / a, EPS);\r\n}\r\nexport function bezierAt(x0, x1, x2, x3, t) {\r\n    // console.log(x0, y0, x1, y1, x2, y2, x3, y3, t)\r\n    var s = 1 - t;\r\n    var c0 = s * s * s;\r\n    var c1 = 3 * s * s * t;\r\n    var c2 = 3 * s * t * t;\r\n    var c3 = t * t * t;\r\n    return x0 * c0 + x1 * c1 + x2 * c2 + x3 * c3;\r\n}\r\nfunction pqFormula(p, q, PRECISION) {\r\n    if (PRECISION === void 0) { PRECISION = 1e-6; }\r\n    // 4 times the discriminant:in\r\n    var discriminantX4 = p * p / 4 - q;\r\n    if (discriminantX4 < -PRECISION) {\r\n        return [];\r\n    }\r\n    else if (discriminantX4 <= PRECISION) {\r\n        return [-p / 2];\r\n    }\r\n    var root = Math.sqrt(discriminantX4);\r\n    return [-(p / 2) - root, -(p / 2) + root];\r\n}\r\nexport function a2c(arc, x0, y0) {\r\n    var _a, _b, _c, _d;\r\n    if (!arc.cX) {\r\n        annotateArcCommand(arc, x0, y0);\r\n    }\r\n    var phiMin = Math.min(arc.phi1, arc.phi2), phiMax = Math.max(arc.phi1, arc.phi2), deltaPhi = phiMax - phiMin;\r\n    var partCount = Math.ceil(deltaPhi / 90);\r\n    var result = new Array(partCount);\r\n    var prevX = x0, prevY = y0;\r\n    for (var i = 0; i < partCount; i++) {\r\n        var phiStart = lerp(arc.phi1, arc.phi2, i / partCount);\r\n        var phiEnd = lerp(arc.phi1, arc.phi2, (i + 1) / partCount);\r\n        var deltaPhi_1 = phiEnd - phiStart;\r\n        var f = 4 / 3 * Math.tan(deltaPhi_1 * DEG / 4);\r\n        // x1/y1, x2/y2 and x/y coordinates on the unit circle for phiStart/phiEnd\r\n        var _e = [\r\n            Math.cos(phiStart * DEG) - f * Math.sin(phiStart * DEG),\r\n            Math.sin(phiStart * DEG) + f * Math.cos(phiStart * DEG)\r\n        ], x1 = _e[0], y1 = _e[1];\r\n        var _f = [Math.cos(phiEnd * DEG), Math.sin(phiEnd * DEG)], x = _f[0], y = _f[1];\r\n        var _g = [x + f * Math.sin(phiEnd * DEG), y - f * Math.cos(phiEnd * DEG)], x2 = _g[0], y2 = _g[1];\r\n        result[i] = { relative: arc.relative, type: SVGPathData.CURVE_TO };\r\n        var transform = function (x, y) {\r\n            var _a = rotate([x * arc.rX, y * arc.rY], arc.xRot), xTemp = _a[0], yTemp = _a[1];\r\n            return [arc.cX + xTemp, arc.cY + yTemp];\r\n        };\r\n        _a = transform(x1, y1), result[i].x1 = _a[0], result[i].y1 = _a[1];\r\n        _b = transform(x2, y2), result[i].x2 = _b[0], result[i].y2 = _b[1];\r\n        _c = transform(x, y), result[i].x = _c[0], result[i].y = _c[1];\r\n        if (arc.relative) {\r\n            result[i].x1 -= prevX;\r\n            result[i].y1 -= prevY;\r\n            result[i].x2 -= prevX;\r\n            result[i].y2 -= prevY;\r\n            result[i].x -= prevX;\r\n            result[i].y -= prevY;\r\n        }\r\n        _d = [result[i].x, result[i].y], prevX = _d[0], prevY = _d[1];\r\n    }\r\n    return result;\r\n}\r\n//# sourceMappingURL=mathUtils.js.map","map":"{\"version\":3,\"file\":\"mathUtils.js\",\"sourceRoot\":\"\",\"sources\":[\"src/mathUtils.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"C:/Users/aval/tsdev/SVGPathData/mathUtils.d.ts","text":"import { CommandA, CommandC } from \"./types\";\r\nexport declare function rotate([x, y]: [number, number], rad: number): number[];\r\nexport declare function assertNumbers(...numbers: number[]): boolean;\r\n/**\r\n * https://www.w3.org/TR/SVG/implnote.html#ArcImplementationNotes\r\n * Fixes rX and rY.\r\n * Ensures lArcFlag and sweepFlag are 0 or 1\r\n * Adds center coordinates: command.cX, command.cY (relative or absolute, depending on command.relative)\r\n * Adds start and end arc parameters (in degrees): command.phi1, command.phi2; phi1 < phi2 iff. c.sweepFlag == true\r\n */\r\nexport declare function annotateArcCommand(c: CommandA, x1: number, y1: number): void;\r\n/**\r\n * Solves a quadratic system of equations of the form\r\n *      a * x + b * y = c\r\n *      x² + y² = 1\r\n * This can be understood as the intersection of the unit circle with a line.\r\n *      => y = (c - a x) / b\r\n *      => x² + (c - a x)² / b² = 1\r\n *      => x² b² + c² - 2 c a x + a² x² = b²\r\n *      => (a² + b²) x² - 2 a c x + (c² - b²) = 0\r\n */\r\nexport declare function intersectionUnitCircleLine(a: number, b: number, c: number): Array<[number, number]>;\r\nexport declare const DEG: number;\r\nexport declare function lerp(a: number, b: number, t: number): number;\r\nexport declare function arcAt(c: number, x1: number, x2: number, phiDeg: number): number;\r\nexport declare function bezierRoot(x0: number, x1: number, x2: number, x3: number): number[];\r\nexport declare function bezierAt(x0: number, x1: number, x2: number, x3: number, t: number): number;\r\nexport declare function a2c(arc: CommandA, x0: number, y0: number): CommandC[];\r\n"}}
