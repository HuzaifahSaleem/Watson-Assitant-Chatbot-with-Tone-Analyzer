{"code":"import { SVGPathDataTransformer } from \"./SVGPathDataTransformer\";\r\nvar TransformableSVG = /** @class */ (function () {\r\n    function TransformableSVG() {\r\n    }\r\n    TransformableSVG.prototype.round = function (x) {\r\n        return this.transform(SVGPathDataTransformer.ROUND(x));\r\n    };\r\n    TransformableSVG.prototype.toAbs = function () {\r\n        return this.transform(SVGPathDataTransformer.TO_ABS());\r\n    };\r\n    TransformableSVG.prototype.toRel = function () {\r\n        return this.transform(SVGPathDataTransformer.TO_REL());\r\n    };\r\n    TransformableSVG.prototype.normalizeHVZ = function (a, b, c) {\r\n        return this.transform(SVGPathDataTransformer.NORMALIZE_HVZ(a, b, c));\r\n    };\r\n    TransformableSVG.prototype.normalizeST = function () {\r\n        return this.transform(SVGPathDataTransformer.NORMALIZE_ST());\r\n    };\r\n    TransformableSVG.prototype.qtToC = function () {\r\n        return this.transform(SVGPathDataTransformer.QT_TO_C());\r\n    };\r\n    TransformableSVG.prototype.aToC = function () {\r\n        return this.transform(SVGPathDataTransformer.A_TO_C());\r\n    };\r\n    TransformableSVG.prototype.sanitize = function (eps) {\r\n        return this.transform(SVGPathDataTransformer.SANITIZE(eps));\r\n    };\r\n    TransformableSVG.prototype.translate = function (x, y) {\r\n        return this.transform(SVGPathDataTransformer.TRANSLATE(x, y));\r\n    };\r\n    TransformableSVG.prototype.scale = function (x, y) {\r\n        return this.transform(SVGPathDataTransformer.SCALE(x, y));\r\n    };\r\n    TransformableSVG.prototype.rotate = function (a, x, y) {\r\n        return this.transform(SVGPathDataTransformer.ROTATE(a, x, y));\r\n    };\r\n    TransformableSVG.prototype.matrix = function (a, b, c, d, e, f) {\r\n        return this.transform(SVGPathDataTransformer.MATRIX(a, b, c, d, e, f));\r\n    };\r\n    TransformableSVG.prototype.skewX = function (a) {\r\n        return this.transform(SVGPathDataTransformer.SKEW_X(a));\r\n    };\r\n    TransformableSVG.prototype.skewY = function (a) {\r\n        return this.transform(SVGPathDataTransformer.SKEW_Y(a));\r\n    };\r\n    TransformableSVG.prototype.xSymmetry = function (xOffset) {\r\n        return this.transform(SVGPathDataTransformer.X_AXIS_SYMMETRY(xOffset));\r\n    };\r\n    TransformableSVG.prototype.ySymmetry = function (yOffset) {\r\n        return this.transform(SVGPathDataTransformer.Y_AXIS_SYMMETRY(yOffset));\r\n    };\r\n    TransformableSVG.prototype.annotateArcs = function () {\r\n        return this.transform(SVGPathDataTransformer.ANNOTATE_ARCS());\r\n    };\r\n    return TransformableSVG;\r\n}());\r\nexport { TransformableSVG };\r\n//# sourceMappingURL=TransformableSVG.js.map","map":"{\"version\":3,\"file\":\"TransformableSVG.js\",\"sourceRoot\":\"\",\"sources\":[\"src/TransformableSVG.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAE,sBAAsB,EAAE,MAAM,0BAA0B,CAAC;AAGlE;IAAA;IAsEA,CAAC;IArEC,gCAAK,GAAL,UAAM,CAAU;QACd,OAAO,IAAI,CAAC,SAAS,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IACzD,CAAC;IAED,gCAAK,GAAL;QACE,OAAO,IAAI,CAAC,SAAS,CAAC,sBAAsB,CAAC,MAAM,EAAE,CAAC,CAAC;IACzD,CAAC;IAED,gCAAK,GAAL;QACE,OAAO,IAAI,CAAC,SAAS,CAAC,sBAAsB,CAAC,MAAM,EAAE,CAAC,CAAC;IACzD,CAAC;IAED,uCAAY,GAAZ,UAAa,CAAW,EAAE,CAAW,EAAE,CAAW;QAChD,OAAO,IAAI,CAAC,SAAS,CAAC,sBAAsB,CAAC,aAAa,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACvE,CAAC;IAED,sCAAW,GAAX;QACE,OAAO,IAAI,CAAC,SAAS,CAAC,sBAAsB,CAAC,YAAY,EAAE,CAAC,CAAC;IAC/D,CAAC;IAED,gCAAK,GAAL;QACE,OAAO,IAAI,CAAC,SAAS,CAAC,sBAAsB,CAAC,OAAO,EAAE,CAAC,CAAC;IAC1D,CAAC;IAED,+BAAI,GAAJ;QACE,OAAO,IAAI,CAAC,SAAS,CAAC,sBAAsB,CAAC,MAAM,EAAE,CAAC,CAAC;IACzD,CAAC;IAED,mCAAQ,GAAR,UAAS,GAAY;QACnB,OAAO,IAAI,CAAC,SAAS,CAAC,sBAAsB,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;IAC9D,CAAC;IAED,oCAAS,GAAT,UAAU,CAAS,EAAE,CAAU;QAC7B,OAAO,IAAI,CAAC,SAAS,CAAC,sBAAsB,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IAChE,CAAC;IAED,gCAAK,GAAL,UAAM,CAAS,EAAE,CAAU;QACzB,OAAO,IAAI,CAAC,SAAS,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IAC5D,CAAC;IAED,iCAAM,GAAN,UAAO,CAAS,EAAE,CAAU,EAAE,CAAU;QACtC,OAAO,IAAI,CAAC,SAAS,CAAC,sBAAsB,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IAChE,CAAC;IAED,iCAAM,GAAN,UAAO,CAAS,EAAE,CAAS,EAAE,CAAS,EAAE,CAAS,EAAE,CAAS,EAAE,CAAS;QACrE,OAAO,IAAI,CAAC,SAAS,CAAC,sBAAsB,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACzE,CAAC;IAED,gCAAK,GAAL,UAAM,CAAS;QACb,OAAO,IAAI,CAAC,SAAS,CAAC,sBAAsB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC;IAED,gCAAK,GAAL,UAAM,CAAS;QACb,OAAO,IAAI,CAAC,SAAS,CAAC,sBAAsB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC;IAED,oCAAS,GAAT,UAAU,OAAgB;QACxB,OAAO,IAAI,CAAC,SAAS,CAAC,sBAAsB,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC,CAAC;IACzE,CAAC;IAED,oCAAS,GAAT,UAAU,OAAgB;QACxB,OAAO,IAAI,CAAC,SAAS,CAAC,sBAAsB,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC,CAAC;IACzE,CAAC;IAED,uCAAY,GAAZ;QACE,OAAO,IAAI,CAAC,SAAS,CAAC,sBAAsB,CAAC,aAAa,EAAE,CAAC,CAAC;IAChE,CAAC;IAGH,uBAAC;AAAD,CAAC,AAtED,IAsEC\"}","dts":{"name":"C:/Users/aval/tsdev/SVGPathData/TransformableSVG.d.ts","text":"import { TransformFunction } from \"./types\";\r\nexport declare abstract class TransformableSVG {\r\n    round(x?: number): this;\r\n    toAbs(): this;\r\n    toRel(): this;\r\n    normalizeHVZ(a?: boolean, b?: boolean, c?: boolean): this;\r\n    normalizeST(): this;\r\n    qtToC(): this;\r\n    aToC(): this;\r\n    sanitize(eps?: number): this;\r\n    translate(x: number, y?: number): this;\r\n    scale(x: number, y?: number): this;\r\n    rotate(a: number, x?: number, y?: number): this;\r\n    matrix(a: number, b: number, c: number, d: number, e: number, f: number): this;\r\n    skewX(a: number): this;\r\n    skewY(a: number): this;\r\n    xSymmetry(xOffset?: number): this;\r\n    ySymmetry(yOffset?: number): this;\r\n    annotateArcs(): this;\r\n    abstract transform(transformFunction: TransformFunction): this;\r\n}\r\n"}}
